import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.GenericServlet;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class MyGenericServlet extends GenericServlet {
    @Override
    public void service(ServletRequest request, ServletResponse response)
            throws ServletException, IOException {
        
        response.setContentType("text/html");
        try (PrintWriter out = response.getWriter()) {
            out.println("<html>");
            out.println("<head><title>Generic Servlet Example</title></head>");
            out.println("<body>");
            out.println("<h2>Hello from MyGenericServlet!</h2>");
            out.println("<p>This is a simple generic servlet.</p>");
            out.println("</body>");
            out.println("</html>");
        }
    }
}










theory-

Java Servlet is a Java program that runs on a web server or application server. It handles client requests, processes them, and generates dynamic web responses. Servlets form the backbone of Java-based web applications.

Features

Run on the server side.

Handle complex client requests efficiently.

Generate dynamic and platform-independent responses.

Types of Servlets

1. GenericServlet

An abstract class that implements the Servlet interface.

Protocol-independent (not limited to HTTP).

Provides basic lifecycle methods like init(), service(), and destroy().

2. HttpServlet

Extends GenericServlet.

Specifically handles HTTP requests and responses.

Provides methods such as:

doGet() – for GET requests

doPost() – for POST requests

doPut(), doDelete(), etc.