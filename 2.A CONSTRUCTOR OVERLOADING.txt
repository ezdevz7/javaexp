
class Student {
    Student() {
        System.out.println("Default Constructor");
    }
    Student(String name) {
        System.out.println("Name: " + name);
    }
    Student(int age, String course) {
        System.out.println("Age: " + age + ", Course: " + course);
    }
    public static void main(String[] args) {
        Student s1 = new Student();
        Student s2 = new Student("Anupam");
        Student s3 = new Student(19, "Java");
    }
}








theory-


Java is a high-level, object-oriented, and platform-independent programming language. It provides many powerful features that make it widely used in software development. The main features of Java are Encapsulation, Inheritance, Polymorphism, and Abstraction.

Polymorphism means "many forms." It allows the same function or method name to behave differently based on the context—such as the number or type of arguments, or the type of object that invokes it.

• Constructor Overloading (Compile-Time Polymorphism)
Constructor overloading occurs when a class has more than one constructor with different parameter lists. It enables the creation of objects in multiple ways, depending on the number or type of arguments passed to the constructor.